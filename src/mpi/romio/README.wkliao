To build ROMIO stand-alone version on Cori:

1. clone source codes:
   git clone --recursive https://github.com/roblatham00/mpich.git

2. Initialize all MPICH build scripts by running commands:
   cd mpich
   ./autogen.sh

3. copy the folder mpich/src/mpi/romio to somewhere else, say
   $HOME/LOGFS/ROMIO/romio-robl

4. Apply a fix from https://github.com/pmodels/mpich/pull/2895

5. A compile-time error shown below needs to be fixed. Edit the file to
   comment it out.
   mpi-io/glue/mpich/mpio_err.c(12): catastrophic error: cannot open source file "mpir_ext.h"
   #include "mpir_ext.h"
   compilation aborted for ../romio-robl/mpi-io/glue/mpich/mpio_err.c (code 4)

6. A link error shown below needs to be fixed.
   % cc -g mpi_file_info.c -o mpi_file_info -Iinclude -Llib -lromio
   lib/libromio.a(shfp_fname.o): In function `ADIOI_Shfp_fname':
   shfp_fname.c:(.text+0x1b6): undefined reference to `MPL_strnapp'

   The fix is to copy function MPL_strnapp from MPICH source file
   mpich/src/pm/hydra/mpl/src/str/mpl_str.c
   to file
   romio-robl/adio/common/shfp_fname.c

7. build recipe:
   ../romio-robl/configure --prefix=$HOME/LOGFS \
                           --with-file-system=ufs+lustre \
                           --with-mpi-impl=MPICH \
                           CC=cc \
                           --disable-shared \
                           --disable-f77 \
                           --disable-f90

8. To compile your application programs, Darshan module must be unloaded.
   Run command "module unload darshan".

9. Run your compile command:
   % cc -g mpi_file_info.c -o mpi_file_info -I$HOME/LOGFS/include $HOME/LOGFS/lib/libromio.a

   Below does not work !!!
   % cc -g mpi_file_info.c -o mpi_file_info -I$HOME/LOGFS/include -L$HOME/LOGFS/lib -lromio
                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^

10. Build PnetCDF with this ROMIO library on Cori by adding options LDFLAGS and
    LIBS:

    ../trunk/configure --prefix=$HOME/PnetCDF \
                --silent \
                cross_compiling="yes" \
                MPICC=cc MPICXX=CC MPIF77=ftn MPIF90=ftn \
                CFLAGS="" CXXFLAGS="" FFLAGS="" FCFLAGS="" \
                TESTMPIRUN="srun -n NP" \
                TESTOUTDIR=$SCRATCH \
                TESTSEQRUN="srun -n 1" \
                LDFLAGS=-L$HOME/LOGFS/lib LIBS=-lromio


